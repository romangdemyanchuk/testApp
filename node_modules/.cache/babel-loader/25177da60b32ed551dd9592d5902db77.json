{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\react-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { email, password, required } from \"../../utils/helpers/validators\";\nimport { Input } from \"../../utils/helpers/formControls\";\nimport Button from \"../../generic/Button\";\nimport './Login.scss';\nimport { LoginRequest } from \"../../redux/session/Auth/AuthReducer\";\nimport { LOGIN_CREATOR, REGISTER_CREATOR } from \"../../redux/session/Auth/AuthConstants\";\nimport { loader } from \"../../utils/helpers/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'login',\n        name: \"login\",\n        component: Input,\n        validate: [email, required]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        placeholder: 'password',\n        name: \"password\",\n        component: Input,\n        validate: [password, required],\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Login\",\n        funk: props.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'loginv'\n})(LoginForm);\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const isAuth = localStorage.getItem(\"isAuth\");\n  const isLoading = useSelector(state => state.auth.isLoading);\n  isAuth && history.push('/people');\n  let dispatch = useDispatch();\n\n  const onSubmit = formData => {\n    dispatch({\n      type: LOGIN_CREATOR,\n      payload: {\n        formData,\n        history\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginFormWrapper\",\n    children: isLoading ? loader() : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: 'register',\n        children: \"to register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"CNKa6BNEBHzNrgPTjC/WaH0CMuI=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c2 = Login;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["E:/Projects/react-project/src/components/Login/Login.js"],"names":["React","useDispatch","useSelector","Link","useHistory","Field","reduxForm","email","password","required","Input","Button","LoginRequest","LOGIN_CREATOR","REGISTER_CREATOR","loader","LoginForm","props","handleSubmit","LoginReduxForm","form","Login","history","isAuth","localStorage","getItem","isLoading","state","auth","push","dispatch","onSubmit","formData","type","payload"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {email, password, required} from \"../../utils/helpers/validators\";\r\nimport {Input} from \"../../utils/helpers/formControls\";\r\nimport Button from \"../../generic/Button\";\r\nimport './Login.scss'\r\nimport {LoginRequest} from \"../../redux/session/Auth/AuthReducer\";\r\nimport {LOGIN_CREATOR, REGISTER_CREATOR} from \"../../redux/session/Auth/AuthConstants\";\r\nimport {loader} from \"../../utils/helpers/Loader\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className=\"login-form\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'login'} name={\"login\"} component={Input}\r\n                       validate={ [email, required] }\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'password'} name={\"password\"} component={Input}\r\n                       validate={[password, required]}\r\n                       type=\"password\"/>\r\n            </div>\r\n            <div>\r\n                {/*<button>Login</button>*/}\r\n                <Button text=\"Login\" funk={props.handleSubmit}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm ({ form: 'loginv'})(LoginForm)\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const isAuth = localStorage.getItem(\"isAuth\");\r\n    const isLoading = useSelector(state => state.auth.isLoading)\r\n    isAuth && history.push('/people')\r\n    let dispatch = useDispatch();\r\n    const onSubmit = (formData) => {\r\n        dispatch({type:LOGIN_CREATOR, payload: {formData, history}})\r\n    }\r\n    return (\r\n        <div className=\"loginFormWrapper\">\r\n            {isLoading ?\r\n                loader() :\r\n                <>\r\n                    <Link to={'register'}>to register</Link>\r\n                    <LoginReduxForm  onSubmit={onSubmit}/>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}