{"ast":null,"code":"import { ALL_ITEMS, RESOURCE } from \"./LayoutConstants\";\nimport { getItemsInfo } from \"../../../utils/api\";\nimport { allItems, expectedResource } from \"./LayoutActions\";\nconst initialState = {\n  items: [],\n  resource: ''\n};\n\nconst LayoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_ITEMS:\n      return { ...state,\n        items: state.items.concat(action.payload)\n      };\n\n    case RESOURCE:\n      return { ...state,\n        resource: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = LayoutReducer;\nexport const getItems = (resource, page) => dispatch => {\n  getItemsInfo(resource, page).then(item => {\n    console.log(12, item.data.results);\n    dispatch(allItems(item.data.results));\n  }).catch(() => {\n    console.log('ERROR');\n  });\n};\nexport const setResource = resource => dispatch => {\n  dispatch(expectedResource(resource));\n};\nexport default LayoutReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Layout/LayoutReducer.js"],"names":["ALL_ITEMS","RESOURCE","getItemsInfo","allItems","expectedResource","initialState","items","resource","LayoutReducer","state","action","type","concat","payload","getItems","page","dispatch","then","item","console","log","data","results","catch","setResource"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,mBAAlC;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,QAAyC,iBAAzC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAFJ,OAAP;;AAIJ,SAAKZ,QAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAFd,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AAbR;AAeH,CAhBD;;KAAMD,a;AAiBN,OAAO,MAAMM,QAAQ,GAAG,CAACP,QAAD,EAAWQ,IAAX,KAAoBC,QAAQ,IAAI;AACpDd,EAAAA,YAAY,CAACK,QAAD,EAAWQ,IAAX,CAAZ,CACKE,IADL,CACWC,IAAI,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBF,IAAI,CAACG,IAAL,CAAUC,OAA1B;AACAN,IAAAA,QAAQ,CAACb,QAAQ,CAACe,IAAI,CAACG,IAAL,CAAUC,OAAX,CAAT,CAAR;AACH,GAJL,EAKKC,KALL,CAKW,MAAM;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAPL;AAQH,CATM;AAUP,OAAO,MAAMI,WAAW,GAAGjB,QAAQ,IAAIS,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAACZ,gBAAgB,CAACG,QAAD,CAAjB,CAAR;AACX,CAFM;AAGP,eAAeC,aAAf","sourcesContent":["import {ALL_ITEMS, RESOURCE} from \"./LayoutConstants\";\r\nimport {getItemsInfo} from \"../../../utils/api\";\r\nimport {allItems, expectedResource} from \"./LayoutActions\";\r\n\r\n\r\nconst initialState = {\r\n    items:[],\r\n    resource: ''\r\n};\r\n\r\nconst LayoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: state.items.concat(action.payload)\r\n            };\r\n        case RESOURCE:\r\n            return {\r\n                ...state,\r\n                resource: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const getItems = (resource, page) => dispatch => {\r\n    getItemsInfo(resource, page)\r\n        .then( item => {\r\n            console.log(12, item.data.results)\r\n            dispatch(allItems(item.data.results));\r\n        })\r\n        .catch(() => {\r\n            console.log('ERROR')\r\n        })\r\n}\r\nexport const setResource = resource => dispatch => {\r\n            dispatch(expectedResource(resource));\r\n}\r\nexport default LayoutReducer;\r\n"]},"metadata":{},"sourceType":"module"}