{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { allItems } from \"./Layout/LayoutActions\";\nimport { ALL_ITEMS } from \"./Layout/LayoutConstants\";\nimport { getItemsInfo } from \"../../utils/api\";\nexport function* sagaWatcher() {\n  yield takeEvery(ALL_ITEMSS, getItemsWorker);\n}\n\nfunction* getItemsWorker(data) {\n  const {\n    resource,\n    page\n  } = data.payload;\n  console.log(data);\n  const items = yield call(getItemsInfo, {\n    resource,\n    page\n  });\n  console.log(items.data.results);\n  yield put({\n    type: ALL_ITEMS,\n    payload: items.data.results\n  }); // dispatch(allItems({resource, page}))\n}","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Sagas.js"],"names":["takeEvery","put","call","allItems","ALL_ITEMS","getItemsInfo","sagaWatcher","ALL_ITEMSS","getItemsWorker","data","resource","page","payload","console","log","items","results","type"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,OAAO,UAAUC,WAAV,GAAyB;AAC5B,QAAMN,SAAS,CAACO,UAAD,EAAaC,cAAb,CAAf;AACH;;AAED,UAAUA,cAAV,CAAyBC,IAAzB,EAA+B;AAC3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAmBF,IAAI,CAACG,OAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,QAAMM,KAAK,GAAG,MAAMb,IAAI,CAACG,YAAD,EAAe;AAACK,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAf,CAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACN,IAAN,CAAWO,OAAvB;AACA,QAAMf,GAAG,CAAC;AAACgB,IAAAA,IAAI,EAAEb,SAAP;AAAkBQ,IAAAA,OAAO,EAAEG,KAAK,CAACN,IAAN,CAAWO;AAAtC,GAAD,CAAT,CAL2B,CAM3B;AACH","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {allItems} from \"./Layout/LayoutActions\";\r\nimport {ALL_ITEMS} from \"./Layout/LayoutConstants\";\r\nimport {getItemsInfo} from \"../../utils/api\";\r\n\r\nexport function* sagaWatcher () {\r\n    yield takeEvery(ALL_ITEMSS, getItemsWorker)\r\n}\r\n\r\nfunction* getItemsWorker(data) {\r\n    const {resource, page} = data.payload\r\n    console.log(data)\r\n    const items = yield call(getItemsInfo, {resource, page})\r\n    console.log(items.data.results)\r\n    yield put({type: ALL_ITEMS, payload: items.data.results})\r\n    // dispatch(allItems({resource, page}))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}