{"ast":null,"code":"import { ALL_ITEMS, PEOPLE, PLANETS, RESOURCE, STARSHIPS } from \"./LayoutConstants\";\nimport { getItemsInfo } from \"../../../utils/api\";\nimport { allItems, expectedResource, peopleItems, planetsItems, starshipsItems } from \"./LayoutActions\";\nimport { error } from \"../../../utils/helpers/infoMessages\";\nconst initialState = {\n  items: [],\n  people: [],\n  planets: [],\n  starships: [],\n  resource: ''\n};\n\nconst LayoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_ITEMS:\n      return { ...state,\n        items: state.items.concat(action.payload)\n      };\n\n    case PEOPLE:\n      return { ...state,\n        people: state.people.concat(action.payload)\n      };\n\n    case PLANETS:\n      return { ...state,\n        planets: state.planets.concat(action.payload)\n      };\n\n    case STARSHIPS:\n      console.log(action.payload);\n      return { ...state,\n        starships: state.starships.concat(action.payload)\n      };\n\n    case RESOURCE:\n      return { ...state,\n        resource: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = LayoutReducer;\nexport const getItems = (resource, page) => dispatch => {\n  console.log(resource);\n  getItemsInfo(resource, page).then(item => {\n    if (resource === 'people') {\n      dispatch(peopleItems(item.data.results));\n    }\n\n    if (resource === 'planets') {\n      dispatch(planetsItems(item.data.results));\n    }\n\n    if (resource === 'starships') {\n      dispatch(starshipsItems(item.data.results));\n    }\n\n    dispatch(allItems(item.data.results));\n  }).catch(() => {\n    error('Something is wrong');\n  });\n};\nexport const setResource = resource => dispatch => {\n  dispatch(expectedResource(resource));\n};\nexport default LayoutReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Layout/LayoutReducer.js"],"names":["ALL_ITEMS","PEOPLE","PLANETS","RESOURCE","STARSHIPS","getItemsInfo","allItems","expectedResource","peopleItems","planetsItems","starshipsItems","error","initialState","items","people","planets","starships","resource","LayoutReducer","state","action","type","concat","payload","console","log","getItems","page","dispatch","then","item","data","results","catch","setResource"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8CC,SAA9C,QAA8D,mBAA9D;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,EAAoCC,WAApC,EAAiDC,YAAjD,EAA+DC,cAA/D,QAAoF,iBAApF;AACA,SAAQC,KAAR,QAAoB,qCAApB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAC,EAHS;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,SAAL;AACI,aAAO,EACH,GAAGmB,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAFJ,OAAP;;AAIJ,SAAKtB,MAAL;AACI,aAAO,EACH,GAAGkB,KADA;AAEHL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaQ,MAAb,CAAoBF,MAAM,CAACG,OAA3B;AAFL,OAAP;;AAIJ,SAAKrB,OAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcO,MAAd,CAAqBF,MAAM,CAACG,OAA5B;AAFN,OAAP;;AAIJ,SAAKnB,SAAL;AACIoB,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,OAAnB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBM,MAAhB,CAAuBF,MAAM,CAACG,OAA9B;AAFR,OAAP;;AAIJ,SAAKpB,QAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACG;AAFd,OAAP;;AAKJ;AACI,aAAOJ,KAAP;AA7BR;AA+BH,CAhCD;;KAAMD,a;AAiCN,OAAO,MAAMQ,QAAQ,GAAG,CAACT,QAAD,EAAWU,IAAX,KAAoBC,QAAQ,IAAI;AACpDJ,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAZ,EAAAA,YAAY,CAACY,QAAD,EAAWU,IAAX,CAAZ,CACKE,IADL,CACWC,IAAI,IAAI;AACX,QAAIb,QAAQ,KAAK,QAAjB,EAA2B;AACvBW,MAAAA,QAAQ,CAACpB,WAAW,CAACsB,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAZ,CAAR;AACH;;AACD,QAAIf,QAAQ,KAAK,SAAjB,EAA4B;AACxBW,MAAAA,QAAQ,CAACnB,YAAY,CAACqB,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAb,CAAR;AACH;;AACD,QAAIf,QAAQ,KAAK,WAAjB,EAA8B;AAC1BW,MAAAA,QAAQ,CAAClB,cAAc,CAACoB,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAf,CAAR;AACH;;AAEDJ,IAAAA,QAAQ,CAACtB,QAAQ,CAACwB,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAT,CAAR;AACH,GAbL,EAcKC,KAdL,CAcW,MAAM;AACTtB,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,GAhBL;AAiBH,CAnBM;AAoBP,OAAO,MAAMuB,WAAW,GAAGjB,QAAQ,IAAIW,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAACrB,gBAAgB,CAACU,QAAD,CAAjB,CAAR;AACX,CAFM;AAGP,eAAeC,aAAf","sourcesContent":["import {ALL_ITEMS, PEOPLE, PLANETS, RESOURCE, STARSHIPS} from \"./LayoutConstants\";\r\nimport {getItemsInfo} from \"../../../utils/api\";\r\nimport {allItems, expectedResource, peopleItems, planetsItems, starshipsItems} from \"./LayoutActions\";\r\nimport {error} from \"../../../utils/helpers/infoMessages\";\r\n\r\n\r\nconst initialState = {\r\n    items:[],\r\n    people: [],\r\n    planets:[],\r\n    starships:[],\r\n    resource: ''\r\n};\r\n\r\nconst LayoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: state.items.concat(action.payload)\r\n            };\r\n        case PEOPLE:\r\n            return {\r\n                ...state,\r\n                people: state.people.concat(action.payload)\r\n            };\r\n        case PLANETS:\r\n            return {\r\n                ...state,\r\n                planets: state.planets.concat(action.payload)\r\n            };\r\n        case STARSHIPS:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                starships: state.starships.concat(action.payload)\r\n            };\r\n        case RESOURCE:\r\n            return {\r\n                ...state,\r\n                resource: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const getItems = (resource, page) => dispatch => {\r\n    console.log(resource)\r\n    getItemsInfo(resource, page)\r\n        .then( item => {\r\n            if (resource === 'people') {\r\n                dispatch(peopleItems(item.data.results));\r\n            }\r\n            if (resource === 'planets') {\r\n                dispatch(planetsItems(item.data.results));\r\n            }\r\n            if (resource === 'starships') {\r\n                dispatch(starshipsItems(item.data.results));\r\n            }\r\n\r\n            dispatch(allItems(item.data.results));\r\n        })\r\n        .catch(() => {\r\n            error('Something is wrong')\r\n        })\r\n}\r\nexport const setResource = resource => dispatch => {\r\n            dispatch(expectedResource(resource));\r\n}\r\nexport default LayoutReducer;\r\n"]},"metadata":{},"sourceType":"module"}