{"ast":null,"code":"import { ALL_ITEMS, LOADING, PEOPLE, PLANETS, RESOURCE, STARSHIPS } from \"./LayoutConstants\";\nimport { getItemsInfo } from \"../../../utils/api\";\nimport { allItems, expectedResource, loading, peopleItems, planetsItems, starshipsItems } from \"./LayoutActions\";\nimport { error } from \"../../../utils/helpers/infoMessages\";\nconst initialState = {\n  items: [],\n  people: [],\n  planets: [],\n  starships: [],\n  isLoading: false,\n  resource: ''\n};\n\nconst LayoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_ITEMS:\n      return { ...state,\n        items: state.items.concat(action.payload)\n      };\n\n    case PEOPLE:\n      return { ...state,\n        people: state.people.concat(action.payload)\n      };\n\n    case PLANETS:\n      return { ...state,\n        planets: state.planets.concat(action.payload)\n      };\n\n    case STARSHIPS:\n      console.log(action.payload);\n      return { ...state,\n        starships: state.starships.concat(action.payload)\n      };\n\n    case RESOURCE:\n      return { ...state,\n        resource: action.payload\n      };\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = LayoutReducer;\nexport const getItems = (resource, page) => dispatch => {\n  dispatch(loading(true));\n  getItemsInfo(resource, page).then(item => {\n    if (resource === 'people') {\n      dispatch(peopleItems(item.data.results));\n    }\n\n    if (resource === 'planets') {\n      dispatch(planetsItems(item.data.results));\n    }\n\n    if (resource === 'starships') {\n      dispatch(starshipsItems(item.data.results));\n    }\n\n    dispatch(allItems(item.data.results));\n  }).catch(() => error('Something is wrong')).fi;\n};\nexport const setResource = resource => dispatch => {\n  dispatch(expectedResource(resource));\n};\nexport default LayoutReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Layout/LayoutReducer.js"],"names":["ALL_ITEMS","LOADING","PEOPLE","PLANETS","RESOURCE","STARSHIPS","getItemsInfo","allItems","expectedResource","loading","peopleItems","planetsItems","starshipsItems","error","initialState","items","people","planets","starships","isLoading","resource","LayoutReducer","state","action","type","concat","payload","console","log","getItems","page","dispatch","then","item","data","results","catch","fi","setResource"],"mappings":"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","sourcesContent":["import {ALL_ITEMS, LOADING, PEOPLE, PLANETS, RESOURCE, STARSHIPS} from \"./LayoutConstants\";\r\nimport {getItemsInfo} from \"../../../utils/api\";\r\nimport {allItems, expectedResource, loading, peopleItems, planetsItems, starshipsItems} from \"./LayoutActions\";\r\nimport {error} from \"../../../utils/helpers/infoMessages\";\r\n\r\n\r\nconst initialState = {\r\n    items:[],\r\n    people: [],\r\n    planets:[],\r\n    starships:[],\r\n    isLoading: false,\r\n    resource: ''\r\n};\r\n\r\nconst LayoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ALL_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: state.items.concat(action.payload)\r\n            };\r\n        case PEOPLE:\r\n            return {\r\n                ...state,\r\n                people: state.people.concat(action.payload)\r\n            };\r\n        case PLANETS:\r\n            return {\r\n                ...state,\r\n                planets: state.planets.concat(action.payload)\r\n            };\r\n        case STARSHIPS:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                starships: state.starships.concat(action.payload)\r\n            };\r\n        case RESOURCE:\r\n            return {\r\n                ...state,\r\n                resource: action.payload,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const getItems = (resource, page) => dispatch => {\r\n    dispatch(loading(true))\r\n    getItemsInfo(resource, page)\r\n        .then( item => {\r\n            if (resource === 'people') {\r\n                dispatch(peopleItems(item.data.results));\r\n            }\r\n            if (resource === 'planets') {\r\n                dispatch(planetsItems(item.data.results));\r\n            }\r\n            if (resource === 'starships') {\r\n                dispatch(starshipsItems(item.data.results));\r\n            }\r\n\r\n            dispatch(allItems(item.data.results));\r\n        })\r\n        .catch(() => error('Something is wrong'))\r\n        .fi\r\n}\r\nexport const setResource = resource => dispatch => {\r\n            dispatch(expectedResource(resource));\r\n}\r\nexport default LayoutReducer;\r\n"]},"metadata":{},"sourceType":"module"}