{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { LOADING } from \"../Layout/LayoutConstants\";\nimport { login, register } from \"../../utils/api\";\nimport { redirect, setToStorage } from \"../../utils/helpers/functions\";\nimport { error, success } from \"../../utils/helpers/infoMessages\";\nexport function* registerWorker({\n  payload: {\n    formData,\n    history\n  }\n}) {\n  try {\n    yield put({\n      type: LOADING,\n      payload: true\n    });\n    yield call(register, {\n      formData\n    });\n    yield call(login, {\n      formData\n    });\n    setToStorage(\"isAuth\", true);\n    success('You successfully register and login');\n    redirect('/people', history);\n  } catch (e) {\n    error(e.response.data.message);\n  } finally {\n    yield put({\n      type: LOADING,\n      payload: false\n    });\n  }\n}\nexport function* loginWorker({\n  payload: {\n    formData,\n    history\n  }\n}) {\n  try {\n    yield put({\n      type: LOADING,\n      payload: true\n    });\n    yield call(login, {\n      formData\n    });\n    setToStorage(\"isAuth\", true);\n    success('You successfully login');\n    redirect('/people', history);\n  } catch (e) {\n    error(e.response.data.message);\n  } finally {\n    yield put({\n      type: LOADING,\n      payload: false\n    });\n  }\n}","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/Auth/AuthWorkers.js"],"names":["call","put","LOADING","login","register","redirect","setToStorage","error","success","registerWorker","payload","formData","history","type","e","response","data","message","loginWorker"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,QAAwB,oBAAxB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,iBAA9B;AACA,SAAQC,QAAR,EAAkBC,YAAlB,QAAqC,+BAArC;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,kCAA7B;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAT,CAAzB,EAAwD;AAC3D,MAAI;AACA,UAAMX,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAEX,OAAP;AAAgBQ,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAT;AACA,UAAMV,IAAI,CAACI,QAAD,EAAW;AAACO,MAAAA;AAAD,KAAX,CAAV;AACA,UAAMX,IAAI,CAACG,KAAD,EAAQ;AAACQ,MAAAA;AAAD,KAAR,CAAV;AACAL,IAAAA,YAAY,CAAC,QAAD,EAAW,IAAX,CAAZ;AACAE,IAAAA,OAAO,CAAC,qCAAD,CAAP;AACAH,IAAAA,QAAQ,CAAC,SAAD,EAAYO,OAAZ,CAAR;AACH,GAPD,CAQA,OAAOE,CAAP,EAAU;AAAEP,IAAAA,KAAK,CAACO,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,OAAjB,CAAL;AAAgC,GAR5C,SASQ;AAAE,UAAMhB,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAEX,OAAP;AAAgBQ,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAT;AAA4C;AACzD;AAED,OAAO,UAAUQ,WAAV,CAAsB;AAACR,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAT,CAAtB,EAAqD;AACxD,MAAI;AACA,UAAMX,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAEX,OAAP;AAAgBQ,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAT;AACA,UAAMV,IAAI,CAACG,KAAD,EAAQ;AAACQ,MAAAA;AAAD,KAAR,CAAV;AACAL,IAAAA,YAAY,CAAC,QAAD,EAAW,IAAX,CAAZ;AACAE,IAAAA,OAAO,CAAC,wBAAD,CAAP;AACAH,IAAAA,QAAQ,CAAC,SAAD,EAAYO,OAAZ,CAAR;AACH,GAND,CAOA,OAAOE,CAAP,EAAU;AAAEP,IAAAA,KAAK,CAACO,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,OAAjB,CAAL;AAAgC,GAP5C,SAQQ;AAAE,UAAMhB,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAEX,OAAP;AAAgBQ,MAAAA,OAAO,EAAE;AAAzB,KAAD,CAAT;AAA4C;AACzD","sourcesContent":["import {call, put} from \"redux-saga/effects\";\r\nimport {LOADING} from \"../Layout/LayoutConstants\";\r\nimport {login, register} from \"../../utils/api\";\r\nimport {redirect, setToStorage} from \"../../utils/helpers/functions\";\r\nimport {error, success} from \"../../utils/helpers/infoMessages\";\r\n\r\nexport function* registerWorker({payload:{formData, history}}) {\r\n    try {\r\n        yield put({type: LOADING, payload: true})\r\n        yield call(register, {formData})\r\n        yield call(login, {formData})\r\n        setToStorage(\"isAuth\", true)\r\n        success('You successfully register and login')\r\n        redirect('/people', history)\r\n    }\r\n    catch (e) { error(e.response.data.message) }\r\n    finally { yield put({type: LOADING, payload: false}) }\r\n}\r\n\r\nexport function* loginWorker({payload:{formData, history}}) {\r\n    try {\r\n        yield put({type: LOADING, payload: true})\r\n        yield call(login, {formData})\r\n        setToStorage(\"isAuth\", true)\r\n        success('You successfully login')\r\n        redirect('/people', history)\r\n    }\r\n    catch (e) { error(e.response.data.message) }\r\n    finally { yield put({type: LOADING, payload: false}) }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}