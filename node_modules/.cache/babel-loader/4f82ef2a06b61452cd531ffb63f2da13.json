{"ast":null,"code":"import { ITEMS, LOADING, MORE_ITEMS, PEOPLE, PLANETS, RESOURCE, STARSHIPS } from \"./LayoutConstants\";\nimport { expectedResource } from \"./LayoutActions\";\nconst initialState = {\n  items: [],\n  loadItems: [],\n  isLoading: false\n};\n\nconst LayoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ITEMS:\n      return { ...state,\n        items: action.payload\n      };\n\n    case MORE_ITEMS:\n      return { ...state,\n        items: state.items.concat(action.payload)\n      };\n\n    case PEOPLE:\n      return { ...state,\n        people: state.people.concat(action.payload)\n      };\n\n    case PLANETS:\n      return { ...state,\n        planets: state.planets.concat(action.payload)\n      };\n\n    case STARSHIPS:\n      console.log(action.payload);\n      return { ...state,\n        starships: state.starships.concat(action.payload)\n      };\n    // case RESOURCE:\n    //     return {\n    //         ...state,\n    //         resource: action.payload,\n    //     };\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // export const getItems = (resource, page) => dispatch => {\n//     return {resource, page}\n//     dispatch(loading(true))\n//     getItemsInfo(resource, page)\n//         .then( item => {\n//             if (resource === 'people') {\n//                 dispatch(peopleItems(item.data.results));\n//             }\n//             if (resource === 'planets') {\n//                 dispatch(planetsItems(item.data.results));\n//             }\n//             if (resource === 'starships') {\n//                 dispatch(starshipsItems(item.data.results));\n//             }\n//\n//             dispatch(allItems(item.data.results));\n//         })\n//         .catch(() => error('Something is wrong'))\n//         .finally(() => dispatch(loading(false)))\n// }\n// export function* sagaWatcher () {\n//     yield takeEvery(ALL_ITEMS, sagaWorker)\n//\n// }\n//\n// function* sagaWorker() {\n//     getItems()\n//\n//     const payload = yield call(getItemsInfo(resource, page))\n//     yield put({type: ALL_ITEMS, payload})\n//\n// }\n\n\n_c = LayoutReducer;\nexport const setResource = resource => dispatch => {\n  dispatch(expectedResource(resource));\n};\nexport default LayoutReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Layout/LayoutReducer.js"],"names":["ITEMS","LOADING","MORE_ITEMS","PEOPLE","PLANETS","RESOURCE","STARSHIPS","expectedResource","initialState","items","loadItems","isLoading","LayoutReducer","state","action","type","payload","concat","people","planets","console","log","starships","setResource","resource","dispatch"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,OAAf,EAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,QAArD,EAA+DC,SAA/D,QAA+E,mBAA/E;AACA,SAAQC,gBAAR,QAA+B,iBAA/B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,KAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKd,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBH,MAAM,CAACE,OAA1B;AAFJ,OAAP;;AAKJ,SAAKb,MAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHK,QAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,CAAaD,MAAb,CAAoBH,MAAM,CAACE,OAA3B;AAFL,OAAP;;AAIJ,SAAKZ,OAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHM,QAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,CAAcF,MAAd,CAAqBH,MAAM,CAACE,OAA5B;AAFN,OAAP;;AAIJ,SAAKV,SAAL;AACIc,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACE,OAAnB;AACA,aAAO,EACH,GAAGH,KADA;AAEHS,QAAAA,SAAS,EAAET,KAAK,CAACS,SAAN,CAAgBL,MAAhB,CAAuBH,MAAM,CAACE,OAA9B;AAFR,OAAP;AAIJ;AACA;AACA;AACA;AACA;;AACA,SAAKf,OAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFf,OAAP;;AAKJ;AACI,aAAOH,KAAP;AAxCR;AA0CH,CA3CD,C,CA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA9EMD,a;AAiFN,OAAO,MAAMW,WAAW,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAClB,gBAAgB,CAACiB,QAAD,CAAjB,CAAR;AACX,CAFM;AAGP,eAAeZ,aAAf","sourcesContent":["import {ITEMS, LOADING, MORE_ITEMS, PEOPLE, PLANETS, RESOURCE, STARSHIPS} from \"./LayoutConstants\";\r\nimport {expectedResource} from \"./LayoutActions\";\r\n\r\n\r\nconst initialState = {\r\n    items:[],\r\n    loadItems: [],\r\n    isLoading: false\r\n};\r\n\r\nconst LayoutReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ITEMS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case MORE_ITEMS:\r\n            return {\r\n                ...state,\r\n                items: state.items.concat(action.payload)\r\n            };\r\n\r\n        case PEOPLE:\r\n            return {\r\n                ...state,\r\n                people: state.people.concat(action.payload)\r\n            };\r\n        case PLANETS:\r\n            return {\r\n                ...state,\r\n                planets: state.planets.concat(action.payload)\r\n            };\r\n        case STARSHIPS:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                starships: state.starships.concat(action.payload)\r\n            };\r\n        // case RESOURCE:\r\n        //     return {\r\n        //         ...state,\r\n        //         resource: action.payload,\r\n        //     };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// export const getItems = (resource, page) => dispatch => {\r\n//     return {resource, page}\r\n//     dispatch(loading(true))\r\n//     getItemsInfo(resource, page)\r\n//         .then( item => {\r\n//             if (resource === 'people') {\r\n//                 dispatch(peopleItems(item.data.results));\r\n//             }\r\n//             if (resource === 'planets') {\r\n//                 dispatch(planetsItems(item.data.results));\r\n//             }\r\n//             if (resource === 'starships') {\r\n//                 dispatch(starshipsItems(item.data.results));\r\n//             }\r\n//\r\n//             dispatch(allItems(item.data.results));\r\n//         })\r\n//         .catch(() => error('Something is wrong'))\r\n//         .finally(() => dispatch(loading(false)))\r\n// }\r\n\r\n\r\n\r\n// export function* sagaWatcher () {\r\n//     yield takeEvery(ALL_ITEMS, sagaWorker)\r\n//\r\n// }\r\n//\r\n// function* sagaWorker() {\r\n//     getItems()\r\n//\r\n//     const payload = yield call(getItemsInfo(resource, page))\r\n//     yield put({type: ALL_ITEMS, payload})\r\n//\r\n// }\r\n\r\n\r\nexport const setResource = resource => dispatch => {\r\n            dispatch(expectedResource(resource));\r\n}\r\nexport default LayoutReducer;\r\n"]},"metadata":{},"sourceType":"module"}