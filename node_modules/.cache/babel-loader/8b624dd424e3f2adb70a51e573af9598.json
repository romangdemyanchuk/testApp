{"ast":null,"code":"import { LOGIN, REGISTER } from \"./AuthConstants\";\nimport { login, register } from \"../../../utils/api\";\nimport { success, error } from \"../../../utils/helpers/infoMessages\";\nimport { redirect } from \"../../../utils/helpers/functions\";\nimport { loginAction } from \"./AuthActions\";\nimport { LOADING } from \"../Layout/LayoutConstants\";\nimport { loading } from \"../Layout/LayoutActions\";\nconst initialState = {\n  loginInfo: [],\n  isAuth: false,\n  isLoading: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        loginInfo: action.payload,\n        isAuth: true\n      };\n\n    case REGISTER:\n      return { ...state // registerData: action.payload,\n\n      };\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\nexport const LoginRequest = (data, history) => dispatch => {\n  dispatch(loading(true));\n  login(data).then(response => {\n    if (response.statusText === \"OK\") {\n      localStorage.setItem(\"isAuth\", true);\n      success('You successfully login');\n      redirect('/people', history);\n      dispatch(loginAction(response));\n    }\n  }).catch(e => error(e.response.data.message)).finally(() => dispatch(loading(false)));\n};\nexport const RegisterRequest = (data, history) => dispatch => {\n  dispatch(loading(true));\n  register(data).then(response => {\n    if (response.request.statusText === \"Created\") {\n      login(data).then(response => {\n        console.log(45, response);\n\n        if (response.statusText === \"OK\") {\n          let token = response.data.token;\n          localStorage.setItem(\"userLoginToken\", token);\n          localStorage.setItem(\"isAuth\", true);\n          dispatch(loginAction(response));\n          success('You successfully register and login');\n          redirect('/people', history);\n        }\n      });\n    }\n  }).catch(e => error(e.response.data.message)).finally(() => dispatch(loading(false)));\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Auth/AuthReducer.js"],"names":["LOGIN","REGISTER","login","register","success","error","redirect","loginAction","LOADING","loading","initialState","loginInfo","isAuth","isLoading","AuthReducer","state","action","type","payload","LoginRequest","data","history","dispatch","then","response","statusText","localStorage","setItem","catch","e","message","finally","RegisterRequest","request","console","log","token"],"mappings":"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","sourcesContent":["import {LOGIN, REGISTER} from \"./AuthConstants\";\r\nimport {login, register} from \"../../../utils/api\";\r\nimport {success, error} from \"../../../utils/helpers/infoMessages\";\r\nimport {redirect} from \"../../../utils/helpers/functions\";\r\nimport {loginAction, } from \"./AuthActions\";\r\nimport {LOADING} from \"../Layout/LayoutConstants\";\r\nimport {loading} from \"../Layout/LayoutActions\";\r\n\r\n\r\nconst initialState = {\r\n    loginInfo:[],\r\n    isAuth: false,\r\n    isLoading: false,\r\n};\r\n\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                loginInfo: action.payload,\r\n                isAuth: true,\r\n            };\r\n        case REGISTER:\r\n            return {\r\n                ...state,\r\n                // registerData: action.payload,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default AuthReducer;\r\n\r\nexport const LoginRequest = (data, history) => (dispatch) => {\r\n    dispatch(loading(true))\r\n    login(data)\r\n        .then((response) => {\r\n            if (response.statusText === \"OK\") {\r\n                localStorage.setItem(\"isAuth\", true);\r\n                success('You successfully login')\r\n                redirect('/people', history)\r\n                dispatch(loginAction(response));\r\n            }\r\n        })\r\n        .catch((e) => error(e.response.data.message))\r\n        .finally(() => dispatch(loading(false)))\r\n\r\n};\r\n\r\nexport const RegisterRequest = (data, history) => (dispatch) => {\r\n    dispatch(loading(true))\r\n    register(data)\r\n        .then((response) => {\r\n            if(response.request.statusText === \"Created\") {\r\n                login(data)\r\n                    .then((response) => {\r\n                        console.log(45, response)\r\n                        if (response.statusText === \"OK\") {\r\n                            let token = response.data.token;\r\n                            localStorage.setItem(\"userLoginToken\", token);\r\n                            localStorage.setItem(\"isAuth\", true);\r\n                            dispatch(loginAction(response));\r\n                            success('You successfully register and login')\r\n                            redirect('/people', history)\r\n                        }\r\n                    })\r\n            }\r\n        })\r\n        .catch((e) => error(e.response.data.message))\r\n        .finally(() => dispatch(loading(false)))\r\n};\r\n"]},"metadata":{},"sourceType":"module"}