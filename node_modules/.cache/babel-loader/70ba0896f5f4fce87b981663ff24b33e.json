{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { allItems, loading } from \"./Layout/LayoutActions\";\nimport { ALL_ITEMS, ALL_ITEMS_CREATOR } from \"./Layout/LayoutConstants\";\nimport { getItemsInfo, login, register } from \"../../utils/api\";\nimport { error, success } from \"../../utils/helpers/infoMessages\";\nimport { redirect } from \"../../utils/helpers/functions\";\nimport { loginAction } from \"./Auth/AuthActions\";\nimport { LOADING, LOGIN, LOGIN_CREATOR, REGISTER, REGISTER_CREATOR } from \"./Auth/AuthConstants\";\nexport function* sagaWatcher() {\n  yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker);\n  yield takeEvery(REGISTER_CREATOR, registerWorker);\n}\n\nfunction* getItemsWorker(data) {\n  const {\n    resource,\n    page\n  } = data.payload;\n  const items = yield call(getItemsInfo, {\n    resource,\n    page\n  });\n  console.log(items.data.results);\n  yield put({\n    type: ALL_ITEMS,\n    payload: items.data.results\n  }); // dispatch(allItems({resource, page}))\n}\n\nfunction* registerWorker(data) {\n  const {\n    formData,\n    history\n  } = data.payload;\n\n  try {\n    yield call(register, {\n      formData\n    });\n    let response = yield call(login, {\n      formData\n    });\n    let token = response.data.token;\n    localStorage.setItem(\"userLoginToken\", token);\n    localStorage.setItem(\"isAuth\", true);\n    success('You successfully login');\n    redirect('/people', history);\n  } catch (e) {\n    error(e.response.data.message);\n  }\n}","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Sagas.js"],"names":["takeEvery","put","call","allItems","loading","ALL_ITEMS","ALL_ITEMS_CREATOR","getItemsInfo","login","register","error","success","redirect","loginAction","LOADING","LOGIN","LOGIN_CREATOR","REGISTER","REGISTER_CREATOR","sagaWatcher","getItemsWorker","registerWorker","data","resource","page","payload","items","console","log","results","type","formData","history","response","token","localStorage","setItem","e","message"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,QAAR,EAAkBC,OAAlB,QAAgC,wBAAhC;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,0BAA3C;AACA,SAAQC,YAAR,EAAsBC,KAAtB,EAA6BC,QAA7B,QAA4C,iBAA5C;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,kCAA7B;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,QAAvC,EAAiDC,gBAAjD,QAAwE,sBAAxE;AAEA,OAAO,UAAUC,WAAV,GAAyB;AAC5B,QAAMnB,SAAS,CAACM,iBAAD,EAAoBc,cAApB,CAAf;AACA,QAAMpB,SAAS,CAACkB,gBAAD,EAAmBG,cAAnB,CAAf;AACH;;AAED,UAAUD,cAAV,CAAyBE,IAAzB,EAA+B;AAC3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAmBF,IAAI,CAACG,OAA9B;AACA,QAAMC,KAAK,GAAG,MAAMxB,IAAI,CAACK,YAAD,EAAe;AAACgB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAf,CAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,IAAN,CAAWO,OAAvB;AACA,QAAM5B,GAAG,CAAC;AAAC6B,IAAAA,IAAI,EAAEzB,SAAP;AAAkBoB,IAAAA,OAAO,EAAEC,KAAK,CAACJ,IAAN,CAAWO;AAAtC,GAAD,CAAT,CAJ2B,CAK3B;AACH;;AAED,UAAUR,cAAV,CAAyBC,IAAzB,EAA+B;AAC3B,QAAM;AAACS,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBV,IAAI,CAACG,OAAjC;;AACA,MAAI;AACA,UAAMvB,IAAI,CAACO,QAAD,EAAW;AAACsB,MAAAA;AAAD,KAAX,CAAV;AACA,QAAIE,QAAQ,GAAG,MAAM/B,IAAI,CAACM,KAAD,EAAQ;AAACuB,MAAAA;AAAD,KAAR,CAAzB;AACA,QAAIG,KAAK,GAAGD,QAAQ,CAACX,IAAT,CAAcY,KAA1B;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCF,KAAvC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,IAA/B;AACAzB,IAAAA,OAAO,CAAC,wBAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,SAAD,EAAYoB,OAAZ,CAAR;AAEH,GATD,CASE,OAAOK,CAAP,EAAU;AACR3B,IAAAA,KAAK,CAAC2B,CAAC,CAACJ,QAAF,CAAWX,IAAX,CAAgBgB,OAAjB,CAAL;AACH;AACJ","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {allItems, loading} from \"./Layout/LayoutActions\";\r\nimport {ALL_ITEMS, ALL_ITEMS_CREATOR} from \"./Layout/LayoutConstants\";\r\nimport {getItemsInfo, login, register} from \"../../utils/api\";\r\nimport {error, success} from \"../../utils/helpers/infoMessages\";\r\nimport {redirect} from \"../../utils/helpers/functions\";\r\nimport {loginAction} from \"./Auth/AuthActions\";\r\nimport {LOADING, LOGIN, LOGIN_CREATOR, REGISTER, REGISTER_CREATOR} from \"./Auth/AuthConstants\";\r\n\r\nexport function* sagaWatcher () {\r\n    yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker)\r\n    yield takeEvery(REGISTER_CREATOR, registerWorker)\r\n}\r\n\r\nfunction* getItemsWorker(data) {\r\n    const {resource, page} = data.payload\r\n    const items = yield call(getItemsInfo, {resource, page})\r\n    console.log(items.data.results)\r\n    yield put({type: ALL_ITEMS, payload: items.data.results})\r\n    // dispatch(allItems({resource, page}))\r\n}\r\n\r\nfunction* registerWorker(data) {\r\n    const {formData, history} = data.payload\r\n    try {\r\n        yield call(register, {formData})\r\n        let response = yield call(login, {formData})\r\n        let token = response.data.token;\r\n        localStorage.setItem(\"userLoginToken\", token);\r\n        localStorage.setItem(\"isAuth\", true);\r\n        success('You successfully login')\r\n        redirect('/people', history)\r\n\r\n    } catch (e) {\r\n        error(e.response.data.message)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}