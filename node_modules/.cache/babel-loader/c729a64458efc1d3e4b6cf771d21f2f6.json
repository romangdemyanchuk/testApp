{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { ALL_ITEMS, ALL_ITEMS_CREATOR } from \"./Layout/LayoutConstants\";\nimport { getItemsInfo, login, register } from \"../../utils/api\";\nimport { error, success } from \"../../utils/helpers/infoMessages\";\nimport { redirect } from \"../../utils/helpers/functions\";\nimport { LOADING, LOGIN, LOGIN_CREATOR, REGISTER_CREATOR } from \"./Auth/AuthConstants\";\nexport function* sagaWatcher() {\n  yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker);\n  yield takeEvery(REGISTER_CREATOR, registerWorker);\n  yield takeEvery(LOGIN_CREATOR, loginWorker);\n}\n\nfunction* getItemsWorker(data) {\n  const {\n    resource,\n    page\n  } = data.payload;\n\n  try {\n    const items = yield call(getItemsInfo, {\n      resource,\n      page\n    });\n    yield put({\n      type: ALL_ITEMS,\n      payload: items.data.results\n    });\n  } catch (e) {\n    error('Something is wrong');\n  }\n}\n\nfunction* registerWorker(data) {\n  const {\n    formData,\n    history\n  } = data.payload;\n\n  try {\n    yield put({\n      type: LOADING,\n      payload: true\n    });\n    yield call(register, {\n      formData\n    });\n    let response = yield call(login, {\n      formData\n    });\n    yield put({\n      type: LOGIN,\n      payload: response\n    });\n    let token = response.data.token;\n    localStorage.setItem(\"userLoginToken\", token);\n    localStorage.setItem(\"isAuth\", true);\n    success('You successfully register and login');\n    redirect('/people', history);\n  } catch (e) {\n    error(e.response.data.message);\n  } finally {\n    yield put({\n      type: LOADING,\n      payload: false\n    });\n  }\n}\n\nfunction* loginWorker(data) {\n  const {\n    formData,\n    history\n  } = data.payload;\n\n  try {\n    yield put({\n      type: LOADING,\n      payload: true\n    });\n    let response = yield call(login, {\n      formData\n    });\n    yield put({\n      type: LOGIN,\n      payload: response\n    });\n    localStorage.setItem(\"isAuth\", true);\n    success('You successfully login');\n    redirect('/people', history);\n  } catch (e) {\n    error(e.response.data.message);\n  } finally {\n    yield put({\n      type: LOADING,\n      payload: false\n    });\n  }\n}","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Sagas.js"],"names":["takeEvery","put","call","ALL_ITEMS","ALL_ITEMS_CREATOR","getItemsInfo","login","register","error","success","redirect","LOADING","LOGIN","LOGIN_CREATOR","REGISTER_CREATOR","sagaWatcher","getItemsWorker","registerWorker","loginWorker","data","resource","page","payload","items","type","results","e","formData","history","response","token","localStorage","setItem","message"],"mappings":"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","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {ALL_ITEMS, ALL_ITEMS_CREATOR} from \"./Layout/LayoutConstants\";\r\nimport {getItemsInfo, login, register} from \"../../utils/api\";\r\nimport {error, success} from \"../../utils/helpers/infoMessages\";\r\nimport {redirect} from \"../../utils/helpers/functions\";\r\nimport {LOADING, LOGIN, LOGIN_CREATOR, REGISTER_CREATOR} from \"./Auth/AuthConstants\";\r\n\r\nexport function* sagaWatcher () {\r\n    yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker)\r\n    yield takeEvery(REGISTER_CREATOR, registerWorker)\r\n    yield takeEvery(LOGIN_CREATOR, loginWorker)\r\n}\r\n\r\nfunction* getItemsWorker(data) {\r\n    const {resource, page} = data.payload\r\n    try {\r\n        const items = yield call(getItemsInfo, {resource, page})\r\n        yield put({type: ALL_ITEMS, payload: items.data.results})\r\n    } catch (e) {\r\n        error('Something is wrong')\r\n    }\r\n\r\n}\r\n\r\nfunction* registerWorker(data) {\r\n    const {formData, history} = data.payload\r\n    try {\r\n        yield put({type: LOADING, payload: true})\r\n        yield call(register, {formData})\r\n        let response = yield call(login, {formData})\r\n        yield put({type: LOGIN, payload: response})\r\n        let token = response.data.token;\r\n        localStorage.setItem(\"userLoginToken\", token);\r\n        localStorage.setItem(\"isAuth\", true);\r\n        success('You successfully register and login')\r\n        redirect('/people', history)\r\n    } catch (e) {\r\n        error(e.response.data.message)\r\n    } finally {\r\n        yield put({type: LOADING, payload: false})\r\n    }\r\n}\r\n\r\nfunction* loginWorker(data) {\r\n    const {formData, history} = data.payload\r\n    try {\r\n        yield put({type: LOADING, payload: true})\r\n        let response = yield call(login, {formData})\r\n        yield put({type: LOGIN, payload: response})\r\n        localStorage.setItem(\"isAuth\", true);\r\n        success('You successfully login')\r\n        redirect('/people', history)\r\n    } catch (e) {\r\n        error(e.response.data.message)\r\n    }\r\n    finally {\r\n        yield put({type: LOADING, payload: false})\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}