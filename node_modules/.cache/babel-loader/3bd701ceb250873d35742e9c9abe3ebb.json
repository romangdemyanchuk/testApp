{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { allItems, loading } from \"./Layout/LayoutActions\";\nimport { ALL_ITEMS, ALL_ITEMS_CREATOR } from \"./Layout/LayoutConstants\";\nimport { getItemsInfo, login } from \"../../utils/api\";\nimport { error, success } from \"../../utils/helpers/infoMessages\";\nimport { redirect } from \"../../utils/helpers/functions\";\nimport { loginAction } from \"./Auth/AuthActions\";\nimport { LOADING, LOGIN, LOGIN_CREATOR, REGISTER_CREATOR } from \"./Auth/AuthConstants\";\nexport function* sagaWatcher() {\n  yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker);\n  yield takeEvery(REGISTER_CREATOR, registerWorker);\n}\n\nfunction* getItemsWorker(data) {\n  const {\n    resource,\n    page\n  } = data.payload;\n  const items = yield call(getItemsInfo, {\n    resource,\n    page\n  });\n  console.log(items.data.results);\n  yield put({\n    type: ALL_ITEMS,\n    payload: items.data.results\n  }); // dispatch(allItems({resource, page}))\n}\n\nfunction* registerWorker(data) {\n  const {\n    formData,\n    history\n  } = data.payload;\n  yield put({\n    LOGIN,\n    payload: formData\n  });\n  const items = yield call(login, {\n    formData\n  });\n  login(data).then(response => {\n    if (response.statusText === \"OK\") {\n      localStorage.setItem(\"isAuth\", true);\n      success('You successfully login');\n      redirect('/people', history);\n    }\n  }).catch(e => error(e.response.data.message)).finally(() => dispatch(loading(false)));\n}","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Sagas.js"],"names":["takeEvery","put","call","allItems","loading","ALL_ITEMS","ALL_ITEMS_CREATOR","getItemsInfo","login","error","success","redirect","loginAction","LOADING","LOGIN","LOGIN_CREATOR","REGISTER_CREATOR","sagaWatcher","getItemsWorker","registerWorker","data","resource","page","payload","items","console","log","results","type","formData","history","then","response","statusText","localStorage","setItem","catch","e","message","finally","dispatch"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,QAAR,EAAkBC,OAAlB,QAAgC,wBAAhC;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,0BAA3C;AACA,SAAQC,YAAR,EAAsBC,KAAtB,QAAkC,iBAAlC;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,kCAA7B;AACA,SAAQC,QAAR,QAAuB,+BAAvB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,gBAAvC,QAA8D,sBAA9D;AAEA,OAAO,UAAUC,WAAV,GAAyB;AAC5B,QAAMjB,SAAS,CAACM,iBAAD,EAAoBY,cAApB,CAAf;AACA,QAAMlB,SAAS,CAACgB,gBAAD,EAAmBG,cAAnB,CAAf;AACH;;AAED,UAAUD,cAAV,CAAyBE,IAAzB,EAA+B;AAC3B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAmBF,IAAI,CAACG,OAA9B;AACA,QAAMC,KAAK,GAAG,MAAMtB,IAAI,CAACK,YAAD,EAAe;AAACc,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAf,CAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,IAAN,CAAWO,OAAvB;AACA,QAAM1B,GAAG,CAAC;AAAC2B,IAAAA,IAAI,EAAEvB,SAAP;AAAkBkB,IAAAA,OAAO,EAAEC,KAAK,CAACJ,IAAN,CAAWO;AAAtC,GAAD,CAAT,CAJ2B,CAK3B;AACH;;AAED,UAAUR,cAAV,CAAyBC,IAAzB,EAA+B;AAC3B,QAAM;AAACS,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBV,IAAI,CAACG,OAAjC;AACA,QAAMtB,GAAG,CAAC;AAACa,IAAAA,KAAD;AAAQS,IAAAA,OAAO,EAAEM;AAAjB,GAAD,CAAT;AACA,QAAML,KAAK,GAAG,MAAMtB,IAAI,CAACM,KAAD,EAAQ;AAACqB,IAAAA;AAAD,GAAR,CAAxB;AACArB,EAAAA,KAAK,CAACY,IAAD,CAAL,CACKW,IADL,CACWC,QAAD,IAAc;AAChB,QAAIA,QAAQ,CAACC,UAAT,KAAwB,IAA5B,EAAkC;AAC9BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,IAA/B;AACAzB,MAAAA,OAAO,CAAC,wBAAD,CAAP;AACAC,MAAAA,QAAQ,CAAC,SAAD,EAAYmB,OAAZ,CAAR;AACH;AACJ,GAPL,EAQKM,KARL,CAQYC,CAAD,IAAO5B,KAAK,CAAC4B,CAAC,CAACL,QAAF,CAAWZ,IAAX,CAAgBkB,OAAjB,CARvB,EASKC,OATL,CASa,MAAMC,QAAQ,CAACpC,OAAO,CAAC,KAAD,CAAR,CAT3B;AAUH","sourcesContent":["import {takeEvery, put, call} from 'redux-saga/effects'\r\nimport {allItems, loading} from \"./Layout/LayoutActions\";\r\nimport {ALL_ITEMS, ALL_ITEMS_CREATOR} from \"./Layout/LayoutConstants\";\r\nimport {getItemsInfo, login} from \"../../utils/api\";\r\nimport {error, success} from \"../../utils/helpers/infoMessages\";\r\nimport {redirect} from \"../../utils/helpers/functions\";\r\nimport {loginAction} from \"./Auth/AuthActions\";\r\nimport {LOADING, LOGIN, LOGIN_CREATOR, REGISTER_CREATOR} from \"./Auth/AuthConstants\";\r\n\r\nexport function* sagaWatcher () {\r\n    yield takeEvery(ALL_ITEMS_CREATOR, getItemsWorker)\r\n    yield takeEvery(REGISTER_CREATOR, registerWorker)\r\n}\r\n\r\nfunction* getItemsWorker(data) {\r\n    const {resource, page} = data.payload\r\n    const items = yield call(getItemsInfo, {resource, page})\r\n    console.log(items.data.results)\r\n    yield put({type: ALL_ITEMS, payload: items.data.results})\r\n    // dispatch(allItems({resource, page}))\r\n}\r\n\r\nfunction* registerWorker(data) {\r\n    const {formData, history} = data.payload\r\n    yield put({LOGIN, payload: formData})\r\n    const items = yield call(login, {formData})\r\n    login(data)\r\n        .then((response) => {\r\n            if (response.statusText === \"OK\") {\r\n                localStorage.setItem(\"isAuth\", true);\r\n                success('You successfully login')\r\n                redirect('/people', history)\r\n            }\r\n        })\r\n        .catch((e) => error(e.response.data.message))\r\n        .finally(() => dispatch(loading(false)))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}