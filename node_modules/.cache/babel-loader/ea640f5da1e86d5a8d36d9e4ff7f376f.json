{"ast":null,"code":"import { LOGIN, REGISTER } from \"./AuthConstants\";\nimport { LOADING } from \"../Layout/LayoutConstants\";\nconst initialState = {\n  loginInfo: [],\n  isAuth: false,\n  isLoading: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        loginInfo: action.payload.data,\n        isAuth: true\n      };\n\n    case LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer; // export const LoginRequest = (data, history) => (dispatch) => {\n//     dispatch(loading(true))\n//     login(data)\n//         .then((response) => {\n//             if (response.statusText === \"OK\") {\n//                 localStorage.setItem(\"isAuth\", true);\n//                 success('You successfully login')\n//                 redirect('/people', history)\n//                 dispatch(loginAction(response));\n//             }\n//         })\n//         .catch((e) => error(e.response.data.message))\n//         .finally(() => dispatch(loading(false)))\n//\n// };\n// export const RegisterRequest = (data, history) => (dispatch) => {\n//     dispatch(loading(true))\n//     register(data)\n//         .then((response) => {\n//             if(response.request.statusText === \"Created\") {\n//                 login(data)\n//                     .then((response) => {\n//                         console.log(45, response)\n//                         if (response.statusText === \"OK\") {\n//                             let token = response.data.token;\n//                             localStorage.setItem(\"userLoginToken\", token);\n//                             localStorage.setItem(\"isAuth\", true);\n//                             dispatch(loginAction(response));\n//                             success('You successfully register and login')\n//                             redirect('/people', history)\n//                         }\n//                     })\n//             }\n//         })\n//         .catch((e) => error(e.response.data.message))\n//         .finally(() => dispatch(loading(false)))\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["E:/Projects/react-project/src/redux/session/Auth/AuthReducer.js"],"names":["LOGIN","REGISTER","LOADING","initialState","loginInfo","isAuth","isLoading","AuthReducer","state","action","type","payload","data"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,iBAA9B;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAC,EADO;AAEjBC,EAAAA,MAAM,EAAE,KAFS;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHJ,QAAAA,SAAS,EAAEK,MAAM,CAACE,OAAP,CAAeC,IAFvB;AAGHP,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ,SAAKH,OAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFf,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAbR;AAeH,CAhBD;;KAAMD,W;AAiBN,eAAeA,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {LOGIN, REGISTER} from \"./AuthConstants\";\r\nimport {LOADING} from \"../Layout/LayoutConstants\";\r\n\r\n\r\nconst initialState = {\r\n    loginInfo:[],\r\n    isAuth: false,\r\n    isLoading: false,\r\n};\r\n\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                ...state,\r\n                loginInfo: action.payload.data,\r\n                isAuth: true,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default AuthReducer;\r\n\r\n// export const LoginRequest = (data, history) => (dispatch) => {\r\n//     dispatch(loading(true))\r\n//     login(data)\r\n//         .then((response) => {\r\n//             if (response.statusText === \"OK\") {\r\n//                 localStorage.setItem(\"isAuth\", true);\r\n//                 success('You successfully login')\r\n//                 redirect('/people', history)\r\n//                 dispatch(loginAction(response));\r\n//             }\r\n//         })\r\n//         .catch((e) => error(e.response.data.message))\r\n//         .finally(() => dispatch(loading(false)))\r\n//\r\n// };\r\n\r\n// export const RegisterRequest = (data, history) => (dispatch) => {\r\n//     dispatch(loading(true))\r\n//     register(data)\r\n//         .then((response) => {\r\n//             if(response.request.statusText === \"Created\") {\r\n//                 login(data)\r\n//                     .then((response) => {\r\n//                         console.log(45, response)\r\n//                         if (response.statusText === \"OK\") {\r\n//                             let token = response.data.token;\r\n//                             localStorage.setItem(\"userLoginToken\", token);\r\n//                             localStorage.setItem(\"isAuth\", true);\r\n//                             dispatch(loginAction(response));\r\n//                             success('You successfully register and login')\r\n//                             redirect('/people', history)\r\n//                         }\r\n//                     })\r\n//             }\r\n//         })\r\n//         .catch((e) => error(e.response.data.message))\r\n//         .finally(() => dispatch(loading(false)))\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}